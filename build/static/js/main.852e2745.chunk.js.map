{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Search","Input","App","props","useState","cardsData","setCardsData","loading","setLoading","React","visible","setVisible","name","setName","location","setLocation","useEffect","sendGetRequest","setTimeout","a","option","url","window","hostname","console","log","axios","get","then","res","data","reverse","alert","response","msg","sendPostRequest","post","Name","Location","className","style","width","margin","placeholder","onSearch","value","enterButton","allowClear","onClick","title","onOk","okText","onCancel","type","onChange","e","target","map","info","idx","size","marginTop","marginBottom","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.852e2745.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"antd/dist/antd.css\";\nimport axios from \"axios\";\nimport { Card, Input, Modal, Button } from \"antd\";\n\nconst { Search } = Input;\n\nfunction App(props) {\n  const [cardsData, setCardsData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [visible, setVisible] = React.useState(false);\n  const [name, setName] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n\n  useEffect(() => {\n    sendGetRequest();\n\n    setTimeout(() => {\n      setLoading(false);\n    }, 3000);\n  }, []);\n\n  const sendGetRequest = async (option = \"\") => {\n    try {\n      let url = `${\n        window.location.hostname === \"localhost\"\n          ? \"http://localhost:8000/api/\"\n          : \"https://spangle-jasper-ocarina.glitch.me/api/\"\n      }${option}`;\n      console.log(url);\n      await axios.get(url).then((res) => {\n        setCardsData(res.data.reverse());\n      });\n    } catch (err) {\n      alert(err.response.data.msg);\n    }\n  };\n  const sendPostRequest = async () => {\n    try {\n      let url =\n        window.location.hostname === \"localhost\"\n          ? \"http://localhost:8000/api/addInfo\"\n          : \"https://spangle-jasper-ocarina.glitch.me/api/addInfo\";\n      await axios\n        .post(url, {\n          Name: name,\n          Location: location,\n        })\n        .then((res) => {\n          alert(res.data);\n          sendGetRequest();\n          setVisible(false);\n        });\n    } catch (err) {\n      setName(\"\");\n      setLocation(\"\");\n      alert(err.response.data.msg);\n    }\n  };\n\n  const onSearch = (value) => {\n    sendGetRequest(value);\n  };\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    sendPostRequest();\n  };\n\n  const handleCancel = () => {\n    setName(\"\");\n    setLocation(\"\");\n    setVisible(false);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__header\">\n        <h1>Samrat Mallick Web App</h1>\n        <div className=\"app__search\">\n          <Search\n            style={{ width: 900, margin: 10 }}\n            placeholder=\"Enter Name or Location\"\n            onSearch={onSearch}\n            enterButton\n            allowClear\n          />\n        </div>\n        <div className=\"app__upload\">\n          <Button onClick={showModal}>Upload Info</Button>\n          <Modal\n            title=\"Upload Data\"\n            visible={visible}\n            onOk={handleOk}\n            okText=\"Submit\"\n            onCancel={handleCancel}\n          >\n            <div className=\"upload__container\">\n              <div className=\"upload__name\">\n                <span>Please enter Name</span>\n                <input\n                  placeholder=\"Please enter Name\"\n                  type=\"text\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n              <div className=\"upload__Location\">\n                <span>Please enter Location</span>\n                <input\n                  placeholder=\"Please enter Location\"\n                  type=\"text\"\n                  value={location}\n                  onChange={(e) => setLocation(e.target.value)}\n                />\n              </div>\n            </div>\n          </Modal>\n        </div>\n      </div>\n      <div className=\"app__cardContainer\">\n        {cardsData?.map((info, idx) => {\n          return (\n            <div className=\"app__card\" key={idx}>\n              <Card\n                size=\"small\"\n                style={{ width: 300, marginTop: 8, marginBottom: 8 }}\n                loading={loading}\n              >\n                <p> Name : {info.Name}</p>\n                <p>Location : {info.Location}</p>\n              </Card>\n            </div>\n          );\n        })}\n        {/* <Card style={{ width: 300, marginTop: 16 }} loading={loading}>\n          <p> Name : {\"Name\"}</p>\n          <p>Location : {\"Location\"}</p>\n        </Card> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}